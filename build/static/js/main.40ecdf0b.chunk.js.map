{"version":3,"sources":["noche.gif","imgfondo.gif","Componentes/useDirApp.js","Componentes/Clima.js","App.js","reportWebVitals.js","index.js"],"names":["useDirApp","useState","clima","setClima","useEffect","navigator","geolocation","getCurrentPosition","posicion","lat","coords","latitude","lon","longitude","axios","get","then","res","data","console","log","Clima","conversorKC","kelvin","grado","Math","round","tempe","setTempe","imagen","setImagen","main","temp","weather","icon","className","style","backgroundImage","noche","dia","sys","country","name","src","alt","humidity","visibility","onClick","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sOAAe,MAA0B,kCCA1B,MAA0B,qC,iBCuB1BA,EApBG,WAEd,MAAuBC,mBAAS,MAAhC,mBAAOC,EAAP,KAAaC,EAAb,KAeA,OAbAC,qBAAU,WAUNC,UAAUC,YAAYC,oBAPZ,SAAAC,GACV,IAAIC,EAAKD,EAASE,OAAOC,SACrBC,EAAKJ,EAASE,OAAOG,UACzBC,IAAMC,IAAN,8DAAiEN,EAAjE,gBAA4EG,EAA5E,4CACCI,MAAK,SAAAC,GAAG,OAAEd,EAASc,EAAIC,YANd,kBAAIC,QAAQC,IAAI,cAW5B,IACKlB,G,OCiCImB,MAhDf,WACI,IAAMC,EAAc,SAACC,EAAQC,GAAT,MAAmB,CAACC,KAAKC,MAAMH,EAAS,QAASC,IAE/DtB,EAAMF,IACZ,EAA0BC,mBAAS,IAAnC,mBAAO0B,EAAP,KAAcC,EAAd,KACA,EAA2B3B,mBAAS,IAApC,mBAAO4B,EAAP,KAAcC,EAAd,KAiBA,OAhBA1B,qBAAU,WACNwB,EAASN,EAAW,OAACpB,QAAD,IAACA,OAAD,EAACA,EAAO6B,KAAKC,KAAM,UACvCF,EAAU,oCAAD,cAAqC5B,QAArC,IAAqCA,OAArC,EAAqCA,EAAO+B,QAAQ,GAAGC,KAAvD,cAET,QAAChC,QAAD,IAACA,OAAD,EAACA,EAAO6B,KAAKC,KAAb,kDAAsD9B,QAAtD,IAAsDA,OAAtD,EAAsDA,EAAO+B,QAAQ,GAAGC,KAAxE,aAUJf,QAAQC,IAAIlB,GAIR,qBAAKiC,UAAU,QAAQC,MAAoC,SAAtB,OAALlC,QAAK,IAALA,OAAA,EAAAA,EAAO+B,QAAQ,GAAGC,OACS,SAAtB,OAALhC,QAAK,IAALA,OAAA,EAAAA,EAAO+B,QAAQ,GAAGC,OACS,SAAtB,OAALhC,QAAK,IAALA,OAAA,EAAAA,EAAO+B,QAAQ,GAAGC,OACS,SAAtB,OAALhC,QAAK,IAALA,OAAA,EAAAA,EAAO+B,QAAQ,GAAGC,OACS,SAAtB,OAALhC,QAAK,IAALA,OAAA,EAAAA,EAAO+B,QAAQ,GAAGC,OACS,SAAtB,OAALhC,QAAK,IAALA,OAAA,EAAAA,EAAO+B,QAAQ,GAAGC,OACS,SAAtB,OAALhC,QAAK,IAALA,OAAA,EAAAA,EAAO+B,QAAQ,GAAGC,OACS,SAAtB,OAALhC,QAAK,IAALA,OAAA,EAAAA,EAAO+B,QAAQ,GAAGC,OACS,SAAtB,OAALhC,QAAK,IAALA,OAAA,EAAAA,EAAO+B,QAAQ,GAAGC,MAClB,CAAEG,gBAAgB,QAAD,OAAUC,EAAV,OACjB,CAAED,gBAAgB,QAAD,OAAUE,EAAV,OAVjD,SAWI,sBAAKJ,UAAU,UAAf,UACI,kDAAWjC,QAAX,IAAWA,OAAX,EAAWA,EAAOsC,IAAIC,WACtB,iDAAavC,QAAb,IAAaA,OAAb,EAAaA,EAAOwC,QACpB,qBAAKC,IAAKd,EAAQe,IAAI,WACtB,8CAAiBjB,EAAjB,OACA,iDAAazB,QAAb,IAAaA,OAAb,EAAaA,EAAO6B,KAAKc,SAAzB,SACA,qDAAiB3C,QAAjB,IAAiBA,OAAjB,EAAiBA,EAAO4C,WAAxB,aACA,wBAAQC,QA9BF,WAVE,IAACxB,EAAQC,EAWR,UAAbG,EAAM,GACNC,GAZaL,EAYO,OAACrB,QAAD,IAACA,OAAD,EAACA,EAAO6B,KAAKC,KAZZR,EAYkB,QAZR,CAACC,KAAKC,MAA0B,GAAnBH,EAAS,QAAc,EAAI,IAAKC,KAc5EI,EAASN,EAAW,OAACpB,QAAD,IAACA,OAAD,EAACA,EAAO6B,KAAKC,KAAM,WA0BnC,SAA0C,UAAbL,EAAM,GAAc,aAAe,kBChCjEqB,MATf,WACE,OACQ,qBAAKb,UAAU,YAAf,SACC,cAAC,EAAD,OCGIc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnC,MAAK,YAAkD,IAA/CoC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.40ecdf0b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noche.198e65a5.gif\";","export default __webpack_public_path__ + \"static/media/imgfondo.9547e7b5.gif\";","import axios  from 'axios';\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst useDirApp = () => {\r\n\r\n    const [clima,setClima]=useState(null);\r\n\r\n    useEffect(()=>{\r\n        let error=()=>console.log(\"Error\");\r\n\r\n        let exito=posicion=>{\r\n        var lat= posicion.coords.latitude;\r\n        var lon= posicion.coords.longitude;\r\n        axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=307298b190f88060b9d58d5a9e6d892b`)\r\n        .then(res=>setClima(res.data));\r\n        }\r\n        \r\n        navigator.geolocation.getCurrentPosition(exito,error);\r\n     \r\n    },[]); \r\n    return clima;\r\n};\r\n\r\nexport default useDirApp;","import { useState, useEffect } from 'react';\r\nimport noche from \"../noche.gif\";\r\nimport dia from \"../imgfondo.gif\";\r\nimport useDirApp from \"./useDirApp\";\r\n\r\nfunction Clima() {\r\n    const conversorKC = (kelvin, grado) => [Math.round(kelvin - 273.15), grado];\r\n    const conversorKF = (kelvin, grado) => [Math.round((kelvin - 273.15) * 9 / 5 + 32), grado];\r\n    const clima=useDirApp();\r\n    const [tempe, setTempe] = useState([]);\r\n    const [imagen,setImagen] = useState([]);\r\n    useEffect(()=>{\r\n        setTempe(conversorKC(clima?.main.temp, \"°C\"));\r\n        setImagen(`http://openweathermap.org/img/wn/${clima?.weather[0].icon}@2x.png`);\r\n        },\r\n        [clima?.main.temp,`http://openweathermap.org/img/wn/${clima?.weather[0].icon}@2x.png`]);\r\n    \r\n    const conversor = () => {\r\n        if (tempe[1] === \"°C\") {\r\n            setTempe(conversorKF(clima?.main.temp, \"°F\"));\r\n        } else {\r\n            setTempe(conversorKC(clima?.main.temp, \"°C\"));\r\n        }\r\n    };\r\n    \r\n    console.log(clima);\r\n    \r\n    return (\r\n\r\n        <div className=\"fondo\" style={  clima?.weather[0].icon === \"01n\" ||\r\n                                        clima?.weather[0].icon === \"02n\" ||\r\n                                        clima?.weather[0].icon === \"03n\" ||\r\n                                        clima?.weather[0].icon === \"04n\" ||\r\n                                        clima?.weather[0].icon === \"09n\" ||\r\n                                        clima?.weather[0].icon === \"10n\" ||\r\n                                        clima?.weather[0].icon === \"11n\" ||\r\n                                        clima?.weather[0].icon === \"13n\" ||\r\n                                        clima?.weather[0].icon === \"50n\" ?\r\n                                        { backgroundImage: `url(\"${noche}\")` } :\r\n                                        { backgroundImage: `url(\"${dia}\")` }}>\r\n            <div className='tarjeta'>\r\n                <h1>País: {clima?.sys.country}</h1>\r\n                <h2>Ciudad: {clima?.name}</h2>\r\n                <img src={imagen} alt=\"imagen\" />\r\n                <p>Temperatura: {tempe} </p>\r\n                <p>Humedad: {clima?.main.humidity} % </p>\r\n                <p>Visibilidad: {clima?.visibility} metros</p>\r\n                <button onClick={conversor}>{tempe[1] === \"°C\" ? \"Fahrenheit\" : \"Celsius\"}</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Clima;","\nimport './App.css';\nimport Clima from './Componentes/Clima'\n\n\n\nfunction App() {\n  return (\n          <div className=\"principal\" >\n           <Clima/>\n          </div>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}