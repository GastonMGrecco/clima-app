{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from 'react';\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\n\nconst useDirApp = url => {\n  _s();\n\n  const [clima, setClima] = useState(null);\n  useEffect(() => {\n    let error = () => console.log(\"Error\");\n\n    let exito = posicion => {\n      let lat = posicion.coords.latitude;\n      let lon = posicion.coords.longitude;\n      axios.get(url).then(res => setClima(res.data));\n    };\n\n    navigator.geolocation.getCurrentPosition(exito, error);\n  }, []);\n  return [clima, lon, lat];\n};\n\n_s(useDirApp, \"VkTn5ytTxAQzddhnMmFGrntYNO4=\");\n\nexport default useDirApp;","map":{"version":3,"sources":["G:/Curso JS/clima-app/src/Componentes/useDirApp.js"],"names":["React","axios","useState","useEffect","useDirApp","url","clima","setClima","error","console","log","exito","posicion","lat","coords","latitude","lon","longitude","get","then","res","data","navigator","geolocation","getCurrentPosition"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAmB,OAAnB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,SAAS,GAAIC,GAAD,IAAS;AAAA;;AAEvB,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAiBL,QAAQ,CAAC,IAAD,CAA/B;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACV,QAAIK,KAAK,GAAC,MAAIC,OAAO,CAACC,GAAR,CAAY,OAAZ,CAAd;;AAEA,QAAIC,KAAK,GAACC,QAAQ,IAAE;AACpB,UAAIC,GAAG,GAAED,QAAQ,CAACE,MAAT,CAAgBC,QAAzB;AACA,UAAIC,GAAG,GAAEJ,QAAQ,CAACE,MAAT,CAAgBG,SAAzB;AACAhB,MAAAA,KAAK,CAACiB,GAAN,CAAUb,GAAV,EACCc,IADD,CACMC,GAAG,IAAEb,QAAQ,CAACa,GAAG,CAACC,IAAL,CADnB;AAEC,KALD;;AAOAC,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyCb,KAAzC,EAA+CH,KAA/C;AAEH,GAZQ,EAYP,EAZO,CAAT;AAaA,SAAO,CAACF,KAAD,EAAOU,GAAP,EAAWH,GAAX,CAAP;AACH,CAlBD;;GAAMT,S;;AAoBN,eAAeA,SAAf","sourcesContent":["import React from 'react';\r\nimport axios  from 'axios';\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst useDirApp = (url) => {\r\n\r\n    const [clima,setClima]=useState(null);\r\n\r\n    useEffect(()=>{\r\n        let error=()=>console.log(\"Error\");\r\n\r\n        let exito=posicion=>{\r\n        let lat= posicion.coords.latitude;\r\n        let lon= posicion.coords.longitude;\r\n        axios.get(url)\r\n        .then(res=>setClima(res.data));\r\n        }\r\n        \r\n        navigator.geolocation.getCurrentPosition(exito,error);\r\n     \r\n    },[]); \r\n    return [clima,lon,lat];\r\n};\r\n\r\nexport default useDirApp;"]},"metadata":{},"sourceType":"module"}